{"ast":null,"code":"var _jsxFileName = \"/Users/nafimahbub/lab5_backup/client/src/components/Budget/Budget.tsx\",\n  _s = $RefreshSig$();\nimport { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { fetchBudget, updateBudget } from \"../../utils/budget-utils\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Budget = () => {\n  _s();\n  const {\n    budget,\n    setBudget\n  } = useContext(AppContext);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedBudget, setEditedBudget] = useState(budget.toString());\n  useEffect(() => {\n    const loadBudget = async () => {\n      try {\n        const budgetAmount = await fetchBudget();\n        setBudget(budgetAmount);\n      } catch (error) {\n        console.error('Failed to load budget:', error);\n      }\n    };\n    loadBudget();\n  }, [setBudget]);\n  const handleEditClick = () => {\n    setIsEditing(true);\n    setEditedBudget(budget.toString());\n  };\n  const handleSaveClick = async () => {\n    const newBudget = parseFloat(editedBudget);\n    if (isNaN(newBudget)) {\n      alert('Please enter a valid number');\n      return;\n    }\n    try {\n      const updatedBudget = await updateBudget(newBudget);\n      setBudget(updatedBudget);\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Failed to update budget:', error);\n      alert('Failed to update budget');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"alert alert-secondary\",\n    \"data-testid\": \"budget-display\",\n    children: !isEditing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Budget: $\", budget]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-sm ms-2\",\n        onClick: handleEditClick,\n        children: \"Edit Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control mb-2\",\n        value: editedBudget,\n        onChange: e => setEditedBudget(e.target.value),\n        \"data-testid\": \"budget-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-success btn-sm\",\n        onClick: handleSaveClick,\n        children: \"Save Budget\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(Budget, \"fWciLrWh0wqmTNzoL5MG+hvKj6o=\");\n_c = Budget;\nexport default Budget;\nvar _c;\n$RefreshReg$(_c, \"Budget\");","map":{"version":3,"names":["useContext","useEffect","useState","AppContext","fetchBudget","updateBudget","jsxDEV","_jsxDEV","Fragment","_Fragment","Budget","_s","budget","setBudget","isEditing","setIsEditing","editedBudget","setEditedBudget","toString","loadBudget","budgetAmount","error","console","handleEditClick","handleSaveClick","newBudget","parseFloat","isNaN","alert","updatedBudget","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/nafimahbub/lab5_backup/client/src/components/Budget/Budget.tsx"],"sourcesContent":["import { useContext, useEffect, useState } from \"react\";\nimport { AppContext } from \"../../context/AppContext\";\nimport { fetchBudget, updateBudget } from \"../../utils/budget-utils\";\n\nconst Budget = () => {\n  const { budget, setBudget } = useContext(AppContext);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedBudget, setEditedBudget] = useState(budget.toString());\n\n  useEffect(() => {\n    const loadBudget = async () => {\n      try {\n        const budgetAmount = await fetchBudget();\n        setBudget(budgetAmount);\n      } catch (error) {\n        console.error('Failed to load budget:', error);\n      }\n    };\n\n    loadBudget();\n  }, [setBudget]);\n\n  const handleEditClick = () => {\n    setIsEditing(true);\n    setEditedBudget(budget.toString());\n  };\n\n  const handleSaveClick = async () => {\n    const newBudget = parseFloat(editedBudget);\n    if (isNaN(newBudget)) {\n      alert('Please enter a valid number');\n      return;\n    }\n\n    try {\n      const updatedBudget = await updateBudget(newBudget);\n      setBudget(updatedBudget);\n      setIsEditing(false);\n    } catch (error) {\n      console.error('Failed to update budget:', error);\n      alert('Failed to update budget');\n    }\n  };\n\n  return (\n    <div className=\"alert alert-secondary\" data-testid=\"budget-display\">\n      {!isEditing ? (\n        <>\n          <span>Budget: ${budget}</span>\n          <button \n            className=\"btn btn-primary btn-sm ms-2\"\n            onClick={handleEditClick}\n          >\n            Edit Budget\n          </button>\n        </>\n      ) : (\n        <>\n          <input\n            type=\"number\"\n            className=\"form-control mb-2\"\n            value={editedBudget}\n            onChange={(e) => setEditedBudget(e.target.value)}\n            data-testid=\"budget-input\"\n          />\n          <button \n            className=\"btn btn-success btn-sm\"\n            onClick={handleSaveClick}\n          >\n            Save Budget\n          </button>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Budget;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}